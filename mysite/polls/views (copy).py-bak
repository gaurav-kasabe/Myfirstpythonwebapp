# Create your views here.
#from django.template import Context, loader
from django.shortcuts import render_to_response, get_object_or_404
from django.template import RequestContext
from polls.models import Poll, Choice
from django.core.urlresolvers import reverse
from django.http import HttpResponse, HttpResponseRedirect

def index(request):
  latest_poll_list = Poll.objects.all().order_by("-pub_date")[:5]
  #shortcut for below code:
  return render_to_response("polls/index.html", {"latest_poll_list": latest_poll_list})
  #t = loader.get_template("polls/index.html")
  #c = Context({"latest_poll_list": latest_poll_list,})
  #return HttpResponse(t.render(c))

  #output = ", ".join([p.question for p in latest_poll_list])
  #return HttpResponse(output)
  #return HttpResponse("Hello, world. Youre at the poll index.")
  

def detail(request, poll_id):
  #shortcut
  p=get_object_or_404(Poll, pk=poll_id)
  #long way
  #try:
    #p=Poll.objects.get(pk=poll_id)
  #except Poll.DoesNotExist:
    #raise Http404
  return render_to_response("polls/details.html",{"poll":p},context_instance=RequestContext(request))  
  
  #return HttpResponse("Youre looking at poll %s." % poll_id)

def results(request, poll_id):
  #return HttpResponse("Youre looking at the results of poll %s." % poll_id)
  p = get_object_or_404(Poll, pk=poll_id)
  return render_to_response("polls/results.html", {"poll": p})


def vote(request, poll_id):
  #return HttpResponse("Youre voting on poll %s." % poll_id)
  p = get_object_or_404(Poll, pk=poll_id)
  try:
    selected_choice = p.choice_set.get(pk=request.POST["choice"])
  except (KeyError, Choice.DoesNotExist):
    # Redisplay the poll voting form.
    return render_to_response("polls/detail.html", {"poll": p,"error_message": "You didnt select a choice.",}, context_instance=RequestContext(request))
  else:
    selected_choice.votes += 1
    selected_choice.save()
    # Always return an HttpResponseRedirect after successfully dealing
    # with POST data. This prevents data from being posted twice if a
    # user hits the Back button.
    return HttpResponseRedirect(reverse("poll_results", args=(p.id,)))

